/***************************************************************************
 *   Copyright (C) 2013 by Okkel Klaver   *
 *   info@vanhetland.nl   *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

[
   uuid(6B20C63D-F57B-4755-9D58-11D93D7EC908), 
   helpstring("Separatista 1.0 Type Library."),
   lcid(0),
   version(1)
]

library Separatista
{
	importlib("stdole.tlb");

	/**
		MT940SRecordset
	*/
	[
		uuid(6DF05A76-0582-415a-9B96-163F76914250),
		helpstring("MT940SDocument object")
	]
	coclass MT940SDocument 
	{
		[default] interface IMT940SDocument;
		interface IDispatch;
	};

	[
		uuid(B61526D3-1B0E-42c0-A276-C0F1DAA94CC8),
		helpstring("IMT940SRecordset interface"),
		oleautomation,
		dual,
		odl
	]
	interface IMT940SRecordset : IDispatch
	{
	};
	[
		uuid(343F637E-DA0B-43a4-A802-8F9EF2DCC5DF),
		helpstring("MT940SRecordset object")
	]
	coclass MT940SRecordset 
	{
		[default] interface IMT940SRecordset;
		interface IDispatch;
	};

	/**
		MT940SDocument
	*/
	typedef enum
	{
		OK,
		E_FILE,
		E_FORMAT
	} MT940SOpenStatus;
	
	[
		uuid(051E4622-F5B0-40c4-81BC-F12EB35F1868),
		helpstring("IMT940SDocument interface"),
		oleautomation,
		dual,
		odl
	]
	interface IMT940SDocument : IDispatch
	{
		[ helpstring("Open a mt940s document") ]
		HRESULT __stdcall Open(
			[in] BSTR Path,
			[out, retval] MT940SOpenStatus* pStatus);

		[ propget, helpstring("The number of MT940SRecordsets in this MT940SDocument" ) ]
		HRESULT __stdcall Count(
			[out, retval] long *plCount);

		[ propget, id(DISPID_VALUE),
			helpstring("Get the MT940Recordset at index") ]
		HRESULT __stdcall Item(
			[in] VARIANT vIndex,
			[out, retval] IMT940SRecordset **ppIMT940SRecordset);

		[ propget, restricted, id(DISPID_NEWENUM), 
			helpstring("Get the enumerator") ]
		HRESULT __stdcall _NewEnum(
			[out, retval] IUnknown **ppUnk);
	};

}
